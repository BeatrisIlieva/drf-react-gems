# Generated by Django 5.2 on 2025-04-29 14:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('BR', 'Bracelets'), ('EA', 'Earrings'), ('NE', 'Necklaces'), ('RI', 'Rings')], error_messages={'unique': 'This category already exists.'}, max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.CharField(choices=[('DA', 'Daisy Delight'), ('CL', 'Classics'), ('GE', 'Gerbera Daisy'), ('FO', 'Forget Me Not'), ('LI', 'Lily Bloom'), ('SP', 'Sparkling Lotus'), ('RA', 'Radiant Cluster'), ('SU', 'Sunflower')], error_messages={'unique': 'This collection already exists.'}, max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(choices=[('BL', 'Blue'), ('GR', 'Green'), ('PI', 'Pink'), ('RE', 'Red'), ('WH', 'White'), ('YE', 'Yellow')], error_messages={'unique': 'This color already exists.'}, max_length=2, unique=True)),
                ('hex_code', models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(choices=[('YE', 'Yellow Gold'), ('RO', 'Rose Gold'), ('PL', 'Platinum')], error_messages={'unique': 'This material already exists.'}, max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_image', models.URLField()),
                ('second_image', models.URLField()),
                ('third_image', models.URLField()),
                ('fourth_image', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryStone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_stone', models.CharField(choices=[('AQ', 'Aquamarine'), ('BS', 'Blue Sapphire'), ('EM', 'Emerald'), ('PS', 'Pink Sapphire'), ('RU', 'Ruby'), ('WD', 'White Diamond'), ('YD', 'Yellow Diamond'), ('YS', 'Yellow Sapphire')], error_messages={'unique': 'This primary stone already exists.'}, max_length=2, unique=True)),
                ('image', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(choices=[('STU', 'Stud'), ('DR', 'Drop'), ('PE', 'Pendant'), ('LA', 'Lariat'), ('TE', 'Tennis'), ('CH', 'Chain'), ('STA', 'Statement')], error_messages={'unique': 'This reference already exists.'}, max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(choices=[('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('OS', 'OS')], error_messages={'unique': 'This size already exists.'}, max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stone', models.CharField(choices=[('AQ', 'Aquamarine'), ('DI', 'Diamond'), ('EM', 'Emerald'), ('RU', 'Ruby'), ('SA', 'Sapphire')], error_messages={'unique': 'This stone already exists.'}, max_length=2, unique=True)),
                ('image', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.collection')),
                ('colors', models.ManyToManyField(to='products.color')),
                ('description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.description')),
                ('materials', models.ManyToManyField(to='products.material')),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.media')),
                ('primary_stone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.primarystone')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.reference')),
                ('stones', models.ManyToManyField(to='products.stone')),
            ],
            options={
                'unique_together': {('category', 'collection', 'primary_stone', 'reference')},
            },
        ),
    ]
