# Generated by Django 5.2 on 2025-04-06 17:39

import django.core.validators
import django.db.models.deletion
import django_ts_gems.accounts.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django_ts_gems.accounts.managers.AppUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AppAddress',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('phone_number', models.CharField(validators=[django.core.validators.RegexValidator(message='Please enter a valid 16 digit card number', regex='^\\+?\\d{9,15}$')])),
                ('country', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=100)),
                ('street_address', models.CharField(max_length=255)),
                ('apartment', models.CharField(blank=True, max_length=20, null=True)),
                ('postal_code', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='AppPayment',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('card_holder', models.CharField(max_length=100)),
                ('card_number', models.CharField(validators=[django.core.validators.RegexValidator(message='Please enter a valid 16 digit card number', regex='^\\d{16}$')])),
                ('expiry_date', models.CharField(validators=[django.core.validators.RegexValidator(message='Please enter a valid expiry date', regex='^(0[1-9]|1[0-2])\\/\\d{2}$')])),
                ('cvv_code', models.CharField(validators=[django.core.validators.RegexValidator(message='Please enter your cardâ€™s 3-digit security code', regex='^\\d{3}$')])),
            ],
        ),
    ]
